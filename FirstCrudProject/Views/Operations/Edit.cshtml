@model FirstCrudProject.Context.user_reg

@{
	ViewBag.Title = "Edit";
	//Layout = "~/Views/Shared/_dashboardLayout.cshtml";
}

<style>
	.error {
		color: red;
	}
</style>


@using (Html.BeginForm("Edit", "Operations", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return formValidation()" }))
{

	<div class="container">

		@Html.HiddenFor(x => x.ID)

		<div class="form-group">
			<br />
			<label> First Name * </label>

			@Html.ValidationMessageFor(x => x.First_Name, "", new { @class = "error" })
			@Html.TextBoxFor(x => x.First_Name, new { @class = "form-control" })
		</div>

		<div class="form-group">
			<label>Middle Name  </label>
			@Html.TextBoxFor(x => x.Middle_Name, new { @class = "form-control" })

		</div>

		<div class="form-group">
			<label>Last Name * </label>
			@Html.ValidationMessageFor(x => x.Last_Name, "", new { @class = "error" })
			@Html.TextBoxFor(x => x.Last_Name, new { @class = "form-control" })

		</div>

		<div class="form-group">
			<label>Email *</label>
			@Html.ValidationMessageFor(x => x.Email, "", new { @class = "error" })
			@Html.TextBoxFor(x => x.Email, new { @class = "form-control", type = "email" })
		</div>

		<div class="form-group">
			<label>Password * </label>
			@Html.ValidationMessageFor(x => x.Password, "", new { @class = "error" })
			@Html.TextBoxFor(x => x.Password, new { @class = "form-control", type = "password" })
		</div>

		<div class="form-group">
			<label>Date of Birth *</label>
			@Html.ValidationMessageFor(x => x.DoB, "", new { @class = "error" })
			@Html.TextBoxFor(x => x.DoB, new { @class = "form-control", onchange = "calcu_age()" })
		</div>

		<div class="form-group">
			<label>Age </label>
			@Html.TextBoxFor(x => x.Age, new { @class = "form-control", type = "number", min = "0" })

		</div>

		<div class="form-group">
			<label>Address</label>
			@Html.TextAreaFor(x => x.Address, new { @class = "form-control", @rows = "3" })
		</div>

		<div class="form-group">
			<label>Select Gender : *</label> <br />
			@Html.ValidationMessageFor(x => x.Gender, "", new { @class = "error" })

			@Html.RadioButtonFor(model => model.Gender, "Male")
			Male
			<br />

			@Html.RadioButtonFor(model => model.Gender, "Female")
			Female
			<br />

			@Html.RadioButtonFor(model => model.Gender, "Other")
			Other

		</div>

		<div class="form-group">
			<label>Upload Image *</label>
			@*<img src="@Url.Content(Session["imgPath"].ToString())" width="100" height="70" />*@
			<img src="@ViewBag.ImageData" width="100" height="70" />
			<input type="file" name="image1" id="image1" />
		</div>


		<div class="form-group">
			<input type="submit" class="btn btn-primary" value="Update">

		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "UserList")
</div>

<script type="text/javascript">

		function calcu_age() {
			var today = new Date();
			var birthDate = document.forms[0].DoB.value;
			var Bday = new Date(birthDate);
			var age = today.getFullYear() - Bday.getFullYear();

			document.forms[0].Age.value = age;
		}

</script>       